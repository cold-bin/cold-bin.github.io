<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go反射 on cold bin&#39;s blog</title>
    <link>https://cold-bin.github.io/tags/go%E5%8F%8D%E5%B0%84/</link>
    <description>Recent content in go反射 on cold bin&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>cold-bin</copyright>
    <lastBuildDate>Fri, 02 Sep 2022 19:26:22 +0800</lastBuildDate>
    <atom:link href="https://cold-bin.github.io/tags/go%E5%8F%8D%E5%B0%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go语言reflect包的使用</title>
      <link>https://cold-bin.github.io/post/go%E8%AF%AD%E8%A8%80reflect%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 02 Sep 2022 19:26:22 +0800</pubDate>
      <guid>https://cold-bin.github.io/post/go%E8%AF%AD%E8%A8%80reflect%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>Go语言reflect包的使用 反射包使用 map and slice 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 func MapAndSlice() { stringSlice := make([]string,0) stringMap := make(map[string]string) sliceType := reflect.TypeOf(stringSlice) mapType := reflect.TypeOf(stringMap) rMap := reflect.MakeMap(mapType) rSlice := reflect.MakeSlice(sliceType,0,0) k := &amp;#34;first&amp;#34; rMap.SetMapIndex(reflect.ValueOf(k),reflect.ValueOf(&amp;#34;test&amp;#34;)) i :=</description>
    </item>
  </channel>
</rss>
