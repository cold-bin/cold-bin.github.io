<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>零拷贝 on cold bin&#39;s blog</title>
    <link>https://cold-bin.github.io/tags/%E9%9B%B6%E6%8B%B7%E8%B4%9D/</link>
    <description>Recent content in 零拷贝 on cold bin&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>cold-bin</copyright>
    <lastBuildDate>Wed, 05 Apr 2023 17:26:42 +0800</lastBuildDate>
    <atom:link href="https://cold-bin.github.io/tags/%E9%9B%B6%E6%8B%B7%E8%B4%9D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>拷贝</title>
      <link>https://cold-bin.github.io/post/%E6%8B%B7%E8%B4%9D/</link>
      <pubDate>Wed, 05 Apr 2023 17:26:42 +0800</pubDate>
      <guid>https://cold-bin.github.io/post/%E6%8B%B7%E8%B4%9D/</guid>
      <description>[toc] 拷贝 说起拷贝，语文上的联想词大概就是“复制”。那么在计算机范围内，二者定义是否一样呢？答案是不一样的。 拷贝：是指在计算机程序中，将一个对象</description>
    </item>
    <item>
      <title>Go语言unsafe包的使用</title>
      <link>https://cold-bin.github.io/post/go%E8%AF%AD%E8%A8%80unsafe%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 28 Aug 2022 14:18:10 +0800</pubDate>
      <guid>https://cold-bin.github.io/post/go%E8%AF%AD%E8%A8%80unsafe%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>unsafe使用及底层 unsafe实现原理 在使用之前我们先来看一下unsafe包的源码部分，标准库unsafe包中只提供了3种方法，分别是:</description>
    </item>
  </channel>
</rss>
