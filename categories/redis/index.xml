<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on cold bin&#39;s blog</title>
    <link>https://cold-bin.github.io/categories/redis/</link>
    <description>Recent content in redis on cold bin&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>cold-bin</copyright>
    <lastBuildDate>Thu, 26 Jan 2023 16:39:51 +0800</lastBuildDate><atom:link href="https://cold-bin.github.io/categories/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis高级篇之最佳实践</title>
      <link>https://cold-bin.github.io/post/redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Thu, 26 Jan 2023 16:39:51 +0800</pubDate>
      
      <guid>https://cold-bin.github.io/post/redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>[toc] Redis高级篇之最佳实践 今日内容 Redis键值设计 批处理优化 服务端优化 集群最佳实践 1、Redis键值设计 1.1、优雅的key结构 Redi</description>
    </item>
    
    <item>
      <title>Redis高级篇之多级缓存</title>
      <link>https://cold-bin.github.io/post/redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/</link>
      <pubDate>Tue, 24 Jan 2023 16:08:44 +0800</pubDate>
      
      <guid>https://cold-bin.github.io/post/redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/</guid>
      <description>[toc] 多级缓存 1.什么是多级缓存 传统的缓存策略一般是请求到达Tomcat后，先查询Redis，如果未命中则查询数据库，如图： 存在下面的问题： 请求</description>
    </item>
    
    <item>
      <title>Redis高级篇之分布式缓存</title>
      <link>https://cold-bin.github.io/post/redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/</link>
      <pubDate>Sun, 15 Jan 2023 17:26:41 +0800</pubDate>
      
      <guid>https://cold-bin.github.io/post/redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/</guid>
      <description>[toc] 基于Redis集群解决单机Redis存在的问题 单机的Redis存在四大问题： 分布式缓存 1.Redis持久化 Redis有两种持久化方案： RD</description>
    </item>
    
    <item>
      <title>Redis应用</title>
      <link>https://cold-bin.github.io/post/redis%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 09 Jan 2023 10:48:47 +0800</pubDate>
      
      <guid>https://cold-bin.github.io/post/redis%E5%BA%94%E7%94%A8/</guid>
      <description>[toc] Redis应用 开篇导读 短信登录 这一块我们会使用redis共享session来实现 商户查询缓存 通过本章节，我们会理解缓存击穿，缓存穿透，缓存</description>
    </item>
    
    <item>
      <title>Redis基础</title>
      <link>https://cold-bin.github.io/post/redis%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 08 Jan 2023 10:27:07 +0800</pubDate>
      
      <guid>https://cold-bin.github.io/post/redis%E5%9F%BA%E7%A1%80/</guid>
      <description>1.初识Redis Redis是一种键值型的NoSql数据库，这里有两个关键字： 键值型 NoSql 其中键值型，是指Redis中存储的数据都是以key、v</description>
    </item>
    
  </channel>
</rss>
